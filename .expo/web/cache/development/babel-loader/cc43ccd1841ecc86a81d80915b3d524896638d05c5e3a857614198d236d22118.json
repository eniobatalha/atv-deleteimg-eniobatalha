{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getStorage, ref, uploadBytes } from \"firebase/storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ImagePickerExample = function ImagePickerExample() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    imageUri = _useState2[0],\n    setImageUri = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    uploading = _useState4[0],\n    setUploading = _useState4[1];\n  var firebaseConfig = {\n    apiKey: \"AIzaSyA3Kb9CCLDu4xfI9_rmCDLwkEPPTsOFL4c\",\n    authDomain: \"aula-mobile-76f22.firebaseapp.com\",\n    projectId: \"aula-mobile-76f22\",\n    storageBucket: \"aula-mobile-76f22.appspot.com\",\n    messagingSenderId: \"588274377803\",\n    appId: \"1:588274377803:web:74f45262068dddf72b99ce\",\n    measurementId: \"G-GNVSBPGQVC\"\n  };\n  var app = initializeApp(firebaseConfig);\n  var analytics = getAnalytics(app);\n  var pickImage = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1\n      });\n      if (!result.cancelled) {\n        setImageUri(result.uri);\n      }\n    });\n    return function pickImage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var uploadImage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!imageUri) {\n        Alert.alert('Selecione uma imagem antes de enviar.');\n        return;\n      }\n      var storage = getStorage();\n      var mountainsRef = ref(storage, imageUri);\n      var mountainImagesRef = ref(storage, 'images/mountains.jpg');\n      mountainsRef.name === mountainImagesRef.name;\n      mountainsRef.fullPath === mountainImagesRef.fullPath;\n      uploadBytes(mountainsRef, imageUri).then(function (snapshot) {\n        console.log('Uploaded a blob or file!');\n      });\n    });\n    return function uploadImage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Button, {\n      title: \"Escolher Imagem\",\n      onPress: pickImage\n    }), imageUri && _jsx(Image, {\n      source: {\n        uri: imageUri\n      },\n      style: {\n        width: 200,\n        height: 200,\n        marginVertical: 20\n      }\n    }), uploading ? _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#0000ff\"\n    }) : _jsx(Button, {\n      title: \"Enviar Imagem\",\n      onPress: uploadImage,\n      disabled: !imageUri\n    })]\n  });\n};\nexport default ImagePickerExample;","map":{"version":3,"names":["React","useState","View","Text","Button","Image","ImagePicker","initializeApp","getAnalytics","getStorage","ref","uploadBytes","jsx","_jsx","jsxs","_jsxs","ImagePickerExample","_useState","_useState2","_slicedToArray","imageUri","setImageUri","_useState3","_useState4","uploading","setUploading","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","analytics","pickImage","_ref","_asyncToGenerator","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","cancelled","uri","apply","arguments","uploadImage","_ref2","Alert","alert","storage","mountainsRef","mountainImagesRef","name","fullPath","then","snapshot","console","log","style","flex","alignItems","justifyContent","children","title","onPress","source","width","height","marginVertical","ActivityIndicator","size","color","disabled"],"sources":["/Users/nilsonjunior/aulamobile/my-app/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { View, Text, StyleSheet, Button, Image, Alert, ActivityIndicator } from 'react-native';\n// import * as ImagePicker from 'react-native-image-picker';\n// import { StatusBar } from 'expo-status-bar';\n// import { initializeApp } from \"firebase/app\";\n// import { getAnalytics } from \"firebase/analytics\";\n// import { getStorage, ref } from \"firebase/storage\";\n\n// export default function App() {\n\n//   const firebaseConfig = {\n//     apiKey: \"AIzaSyA3Kb9CCLDu4xfI9_rmCDLwkEPPTsOFL4c\",\n//     authDomain: \"aula-mobile-76f22.firebaseapp.com\",\n//     projectId: \"aula-mobile-76f22\",\n//     storageBucket: \"aula-mobile-76f22.appspot.com\",\n//     messagingSenderId: \"588274377803\",\n//     appId: \"1:588274377803:web:74f45262068dddf72b99ce\",\n//     measurementId: \"G-GNVSBPGQVC\"\n//   };\n\n//   // Initialize Firebase\n//   const app = initializeApp(firebaseConfig);\n//   const analytics = getAnalytics(app);\n\n//   // Get a reference to the storage service, which is used to create references in your storage bucket\n//   const storage = getStorage();\n\n//   // Create a storage reference from our storage service\n//   const storageRef = ref(storage);\n\n//   const [imageUri, setImageUri] = useState(null);\n//   const [uploading, setUploading] = useState(false);\n\n//   const pickImage = () => {\n//     ImagePicker.launchImageLibrary({}, (response) => {\n//       if (response.uri) {\n//         setImageUri(response.uri);\n//       }\n//     });\n//   };\n\n//   const uploadImage = async () => {\n//     if (!imageUri) {\n//       Alert.alert('Selecione uma imagem antes de enviar.');\n//       return;\n//     }\n\n//     setUploading(true);\n//     const filename = imageUri.substring(imageUri.lastIndexOf('/') + 1);\n\n//     try {\n//       const reference = storage().ref(`images/${filename}`);\n//       await reference.putFile(imageUri);\n//       const downloadURL = await reference.getDownloadURL();\n//       Alert.alert('Sucesso', 'Imagem enviada com sucesso.');\n//       setImageUri(null);\n//       setUploading(false);\n//       console.log('URL de download:', downloadURL);\n//     } catch (error) {\n//       console.error('Erro ao enviar imagem:', error);\n//       Alert.alert('Erro', 'Houve um erro ao enviar a imagem.');\n//       setUploading(false);\n//     }\n//   };\n\n//   return (\n//     <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n//       <Button title=\"Escolher Imagem\" onPress={pickImage} />\n//       {imageUri && <Image source={{ uri: imageUri }} style={{ width: 200, height: 200, marginVertical: 20 }} />}\n//       {uploading ? (\n//         <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n//       ) : (\n//         <Button title=\"Enviar Imagem\" onPress={uploadImage} disabled={!imageUri} />\n//       )}\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: '#fff',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   },\n// });\n\n\n\nimport React, { useState } from 'react';\nimport { View, Text, Button, Image } from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getStorage, ref, uploadBytes} from \"firebase/storage\";\n\nconst ImagePickerExample = () => {\n  const [imageUri, setImageUri] = useState(null);\n  const [uploading, setUploading] = useState(false);\n\n  const firebaseConfig = {\n    apiKey: \"AIzaSyA3Kb9CCLDu4xfI9_rmCDLwkEPPTsOFL4c\",\n    authDomain: \"aula-mobile-76f22.firebaseapp.com\",\n    projectId: \"aula-mobile-76f22\",\n    storageBucket: \"aula-mobile-76f22.appspot.com\",\n    messagingSenderId: \"588274377803\",\n    appId: \"1:588274377803:web:74f45262068dddf72b99ce\",\n    measurementId: \"G-GNVSBPGQVC\"\n  };\n\n  // Initialize Firebase\n  const app = initializeApp(firebaseConfig);\n  const analytics = getAnalytics(app);\n\n\n\n\n  const pickImage = async () => {\n    const result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    if (!result.cancelled) {\n      setImageUri(result.uri);\n    }\n  };\n\n    const uploadImage = async () => {\n    if (!imageUri) {\n      Alert.alert('Selecione uma imagem antes de enviar.');\n      return;\n    }\n\n    // Create a root reference\n    const storage = getStorage();\n    \n    // Create a reference to 'mountains.jpg'\n    const mountainsRef = ref(storage, imageUri);\n    \n    // Create a reference to 'images/mountains.jpg'\n    const mountainImagesRef = ref(storage, 'images/mountains.jpg');\n    \n    // While the file names are the same, the references point to different files\n    mountainsRef.name === mountainImagesRef.name;           // true\n    mountainsRef.fullPath === mountainImagesRef.fullPath;   // false\n    \n    uploadBytes(mountainsRef, imageUri).then((snapshot) => {\n      console.log('Uploaded a blob or file!');\n    });\n  };\n\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n  \n     \n      <Button title=\"Escolher Imagem\" onPress={pickImage} />\n       {imageUri && <Image source={{ uri: imageUri }} style={{ width: 200, height: 200, marginVertical: 20 }} />}\n       {uploading ? (\n         <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n       ) : (\n         <Button title=\"Enviar Imagem\" onPress={uploadImage} disabled={!imageUri} />\n      )}\n    </View>\n  );\n};\n\nexport default ImagePickerExample;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}